morphlines : [
  {
    id : morphline1
    importCommands : ["org.kitesdk.morphline.**", "com.ngdata.**"]

    commands : [
      {
        extractHBaseCells {
          mappings : [
            {
              inputColumn : "id:Day"
              outputField : "Day_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Month"
              outputField : "Month_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Hour"
              outputField : "Hour_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Year"
              outputField : "Year_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Minute"
              outputField : "Minute_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Second"
              outputField : "Second_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:Time_Stamp"
              outputField : "Time_Stamp_s"
              type : string
              source : value
            }
             {
              inputColumn : "id:Country"
              outputField : "Country_s"
              type : string
              source : value
            }
             {
              inputColumn : "id:Region"
              outputField : "Region_s"
              type : string
              source : value
            }
              {
              inputColumn : "id:city"
              outputField : "city_s"
              type : string
              source : value
            }
              {
              inputColumn : "id:country_code"
              outputField : "country_code_s"
              type : string
              source : value
            }
               {
              inputColumn : "id:metro_code"
              outputField : "metro_code_s"
              type : string
              source : value
            }
               {
              inputColumn : "id:postal_code"
              outputField : "postal_code_i"
              type : int
              source : value
            }
             {
              inputColumn : "id:ip"
              outputField : "ip_s"
              type : string
              source : value
            }
           
            {
              inputColumn : "id:indentd"
              outputField : "identd_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:userid"
              outputField : "userid_s"
              type : string
              source : value
            }
            {
              inputColumn : "id:client_request_line"
              outputField : "client_request_line_s"
              type : string
              source : value
            }
             {
              inputColumn : "id:status_code"
              outputField : "status_code_i"
              type : int
              source : value
            }
             {
              inputColumn : "id:bytes"
              outputField : "bytes_i"
              type : int
              source : value
            }
             {
              inputColumn : "id:referer"
              outputField : "referer_s"
              type : string
              source : value
            }
            
            {
              inputColumn : "id:user_agent"
              outputField : "user_agent_s"
              type : string
              source : value
            }
              {
              inputColumn : "id:mu"
              outputField : "mu_s"
              type : string
              source : value
            }
            
            
            
            
            #{
            #  inputColumn : "data:item"
            #  outputField : "_attachment_body"
            #  type : "byte[]"
            #  source : value
            #}
          ]
        }
      }

      #for avro use with type : "byte[]" in extractHBaseCells mapping above
      #{ readAvroContainer {} }
      #{
      #  extractAvroPaths {
      #    paths : {
      #      data : /user_name
      #    }
      #  }
      #}

      { logTrace { format : "output record: {}", args : ["@{}"] } }
    ]
  }
]


  
   
   
                
                
   